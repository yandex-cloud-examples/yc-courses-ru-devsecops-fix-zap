---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ default .Release.Namespace .Values.namespace | quote }}
spec:
  storageClassName: {{ .Values.postgres.storageClass }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.storageSize }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ default .Release.Namespace .Values.namespace | quote }}
data:
  POSTGRES_HOST_AUTH_METHOD: md5
  PGDATA: /var/lib/postgresql/data/finenomore/
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.postgres.name }}-init
  namespace: {{ default .Release.Namespace .Values.namespace | quote }}
data:
  finenomore.sql: |
    DROP TABLE IF EXISTS "fines";
    DROP SEQUENCE IF EXISTS fines_id_seq;
    CREATE SEQUENCE fines_id_seq INCREMENT 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;

    CREATE TABLE "public"."fines" (
        "id" integer DEFAULT nextval('fines_id_seq') NOT NULL,
        "number_id" integer NOT NULL,
        "fine_date" timestamp NOT NULL,
        "fine_text" text NOT NULL,
        "fine_sum" integer NOT NULL,
        CONSTRAINT "fines_pkey" PRIMARY KEY ("id")
    ) WITH (oids = false);

    CREATE INDEX "fines_number_id" ON "public"."fines" USING btree ("number_id");

    INSERT INTO "fines" ("id", "number_id", "fine_date", "fine_text", "fine_sum") VALUES
    (1, 1, '2022-07-30 10:02:13', 'Ст. 12.9 КоАП РФ, п. 2', 500),
    (2, 1, '2022-08-04 13:50:49', 'Ст. 12.9 КоАП РФ, п. 3', 1000),
    (3, 2, '2022-07-04 13:50:49', 'Ст. 12.9 КоАП РФ, п. 2', 500),
    (4, 3, '2002-02-03 12:11:10', 'Ст. 12.9 КоАП РФ, п. 2', 500);

    DROP TABLE IF EXISTS "numbers";
    DROP SEQUENCE IF EXISTS numbers_id_seq;
    CREATE SEQUENCE numbers_id_seq INCREMENT 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;

    CREATE TABLE "public"."numbers" (
        "id" integer DEFAULT nextval('numbers_id_seq') NOT NULL,
        "number" character(9) NOT NULL,
        CONSTRAINT "numbers_pkey" PRIMARY KEY ("id")
    ) WITH (oids = false);

    INSERT INTO "numbers" ("id", "number") VALUES
    (1, 'В215ОР777'),
    (2, 'Н644ТН777'),
    (3, 'О258ВН97 ');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ default .Release.Namespace .Values.namespace | quote }}
spec:
  replicas: 1
  selector:
    {{- with .Values.postgres.labels }}
    matchLabels:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  template:
    metadata:
      {{- with .Values.postgres.labels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Values.postgres.name }}
          image: {{ .Values.postgres.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: {{ .Values.postgres.name }}
            - secretRef:
                name: {{ .Values.postgres.secret }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /docker-entrypoint-initdb.d
              name: postgreinit
          resources: {{ .Values.finenomore.resources | toYaml | nindent 12 }}
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.name }}
        - name: postgreinit
          configMap:
            name: {{ .Values.postgres.name }}-init
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ default .Release.Namespace .Values.namespace | quote }}
spec:
  type: ClusterIP
  ports:
   - port: 5432
  {{- with .Values.postgres.labels }}
  selector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
